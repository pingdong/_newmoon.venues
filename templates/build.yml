parameters:
  appName: ''

jobs:
- job: Build
  displayName: Building
  pool:
    vmImage: $(pipeline#pool)
  workspace:
    clean: all
  variables:
  - group : Pipeline
  - group : Build
  steps:
  - task: DotNetCoreCLI@2
    displayName: Restoring dependencies
    inputs:
      command: restore
      projects: '**/*.csproj'
      arguments: '--configuration $(build#configuration.release)'

  - task: DotNetCoreCLI@2
    displayName: 'Building with Configuration: $(build#configuration.release)'
    condition: succeeded()
    inputs:
      command: publish
      publishWebProjects: false
      projects: '**/$(parameters.appName).csproj'
      arguments: '--no-restore --configuration $(build#configuration.release) --output $(Build.ArtifactStagingDirectory)'

  # - job: BuildDBMigrationScript
  #   displayName: Building Database Migration Script
  #   pool:
  #     vmImage: $(build#pool)
  #   workspace:
  #     clean: all 
  #   variables:
  #   - group: Build
  #   steps:
  #   - task: pekspro.pekspro-efcore-migration-script-generator.efcore-migration-script-generator.efcore-migration-script-generator-task@0
  #     displayName: 'Generate Migration Scripts'
  #     inputs:
  #       projectpath: src/infrastructure/Places.Infrastructure.csproj
  #       databasecontexts: DefaultDbContext
  #       targetfolder: '$(Build.ArtifactStagingDirectory)'
  #     condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  #     env:
  #       ConnectionStrings__Default: $(Place-Db-ConnectionString)

  - task: PublishBuildArtifacts@1
    displayName: Publishing Artifact
